package fitbit

import (
	"context"
	"net/http"
)

type Profile struct {
	User User `json:"user"`
}

// generated by json-to-go
type User struct {
	Age                    int    `json:"age"`
	Ambassador             bool   `json:"ambassador"`
	Avatar                 string `json:"avatar"`
	Avatar150              string `json:"avatar150"`
	Avatar640              string `json:"avatar640"`
	AverageDailySteps      int    `json:"averageDailySteps"`
	ChallengesBeta         bool   `json:"challengesBeta"`
	ClockTimeDisplayFormat string `json:"clockTimeDisplayFormat"`
	Corporate              bool   `json:"corporate"`
	CorporateAdmin         bool   `json:"corporateAdmin"`
	Country                string `json:"country"`
	DateOfBirth            string `json:"dateOfBirth"`
	DisplayName            string `json:"displayName"`
	DisplayNameSetting     string `json:"displayNameSetting"`
	DistanceUnit           string `json:"distanceUnit"`
	EncodedID              string `json:"encodedId"`
	Features               struct {
		ExerciseGoal bool `json:"exerciseGoal"`
	} `json:"features"`
	FoodsLocale              string  `json:"foodsLocale"`
	FullName                 string  `json:"fullName"`
	Gender                   string  `json:"gender"`
	GlucoseUnit              string  `json:"glucoseUnit"`
	Height                   float64 `json:"height"`
	HeightUnit               string  `json:"heightUnit"`
	IsBugReportEnabled       bool    `json:"isBugReportEnabled"`
	IsChild                  bool    `json:"isChild"`
	IsCoach                  bool    `json:"isCoach"`
	LanguageLocale           string  `json:"languageLocale"`
	LegalTermsAcceptRequired bool    `json:"legalTermsAcceptRequired"`
	Locale                   string  `json:"locale"`
	MemberSince              string  `json:"memberSince"`
	MfaEnabled               bool    `json:"mfaEnabled"`
	OffsetFromUTCMillis      int     `json:"offsetFromUTCMillis"`
	SdkDeveloper             bool    `json:"sdkDeveloper"`
	SleepTracking            string  `json:"sleepTracking"`
	StartDayOfWeek           string  `json:"startDayOfWeek"`
	StrideLengthRunning      float64 `json:"strideLengthRunning"`
	StrideLengthRunningType  string  `json:"strideLengthRunningType"`
	StrideLengthWalking      float64 `json:"strideLengthWalking"`
	StrideLengthWalkingType  string  `json:"strideLengthWalkingType"`
	SwimUnit                 string  `json:"swimUnit"`
	Timezone                 string  `json:"timezone"`
	TopBadges                []struct {
		BadgeGradientEndColor   string        `json:"badgeGradientEndColor"`
		BadgeGradientStartColor string        `json:"badgeGradientStartColor"`
		BadgeType               string        `json:"badgeType"`
		Category                string        `json:"category"`
		Cheers                  []interface{} `json:"cheers"`
		DateTime                string        `json:"dateTime"`
		Description             string        `json:"description"`
		EarnedMessage           string        `json:"earnedMessage"`
		EncodedID               string        `json:"encodedId"`
		Image100Px              string        `json:"image100px"`
		Image125Px              string        `json:"image125px"`
		Image300Px              string        `json:"image300px"`
		Image50Px               string        `json:"image50px"`
		Image75Px               string        `json:"image75px"`
		MarketingDescription    string        `json:"marketingDescription"`
		MobileDescription       string        `json:"mobileDescription"`
		Name                    string        `json:"name"`
		ShareImage640Px         string        `json:"shareImage640px"`
		ShareText               string        `json:"shareText"`
		ShortDescription        string        `json:"shortDescription"`
		ShortName               string        `json:"shortName"`
		TimesAchieved           int           `json:"timesAchieved"`
		Value                   int           `json:"value"`
		Unit                    string        `json:"unit,omitempty"`
	} `json:"topBadges"`
	WaterUnit     string  `json:"waterUnit"`
	WaterUnitName string  `json:"waterUnitName"`
	Weight        float64 `json:"weight"`
	WeightUnit    string  `json:"weightUnit"`
}

func (api *Client) GetProfile() (*Profile, *Response, error) {
	return api.GetProfileContext(context.Background())
}

func (api *Client) GetProfileContext(ctx context.Context) (*Profile, *Response, error) {
	var m Profile
	req, err := GetProfileRequest(ctx)
	if err != nil {
		return nil, nil, err
	}
	resp, err := api.do_request(req, &m)
	return &m, resp, err
}

func GetProfile(c *Client) (*Profile, error) {
	return GetProfileContext(context.Background(), c)
}

func GetProfileContext(ctx context.Context, c *Client) (*Profile, error) {
	m, _, err := c.GetProfileContext(ctx)
	return m, err
}

func GetProfileRequest(ctx context.Context) (*http.Request, error) {
	return http.NewRequestWithContext(ctx, "GET", "https://api.fitbit.com/1/user/-/profile.json", nil)
}
